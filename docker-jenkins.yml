---
- hosts: localhost
  become: True
  connection: local
  vars_files:
   - vars.yml
   - jobs.yml
  tasks:
      - package: name={{item}}
        with_items:
          - jq
          - python-pip
          - openjdk-8-jdk
      - pip: name={{item}} state=latest
        with_items:
          - pip
          - yamllint
          - jenkins-job-builder
          - scalr-ctl
      - file:
          path: /etc/jenkins_jobs/{{ item }}
          state: directory
        with_items:
          - jobs
          - config
      - file:
          path: /opt/jenkins/
          state: directory
          owner: ubuntu
          group: ubuntu
      - copy:
          src: ./files/{{ item }}
          dest: /opt/jenkins/{{ item }}
          owner: ubuntu
          group: ubuntu
        with_items:
          - add_admin.groovy
          - Dockerfile
          - docker-compose.yml
      - template: src="./templates/jenkins_jobs.ini.tmp" dest="/etc/jenkins_jobs/jenkins_jobs.ini" mode=0600 owner="ubuntu" group="ubuntu"
      - template: src="./templates/scalr.conf.tmp" dest="/etc/jenkins_jobs/config/{{ item.name }}-conf.yml" mode=0600 owner="ubuntu" group="ubuntu"
        with_items: "{{ jobs }}"
      - template: src="./templates/jenkins_job.tmp" dest="/etc/jenkins_jobs/jobs/{{item.name}}.yml" mode=0600 owner="ubuntu" group="ubuntu"
        with_items: "{{ jobs }}"
      - docker_image:
           path: /opt/jenkins
           name: scalr-demo
      - docker_service:
          project_src: /opt/jenkins
          build: yes
        register: output
      - wait_for:
          host: 0.0.0.0
          port: 8080
          delay: 10
      - command: /usr/local/bin/jenkins-jobs update {{item}}
        with_fileglob:
          - /etc/jenkins_jobs/jobs/*.yml
        register: output
      - debug: var=output
